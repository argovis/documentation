.. _point_schema:

Point Schema
============

All data indexed by Argovis which can be cast as *point data* - in general,  any piece of data attached to a set of spacetime coodinates - are represented by the JSON schema described in this document. Argovis' point data schema is *hierarchical*,  in that all such schema inherit from the base point data schema; this creates two main advantages:

 - By requiring all point data encode their common features like coordinates,  IDs and other universal metadata identically,  it is trivial to include new data products in co-location APIs that search on these parametes.
 - Flexibility to represent arbitrary point data is maintained by allowing subject matter experts for a given measurement class to extend the base point data schema with additional schema that represent their specific instrument or measurement.

In this way,  we try to capture the flexibility of schema-less databases like mongodb,  while imposing just enough structure to capture the data validation opportunities afforded by strictly defined schema.

How to read this schema
-----------------------

Each entry in the schema fragments below contain a few keys:

- **type:** the primitive type,  format,  or object description of a valid entry for this field
- **description:** short comment on what this variable is
- **fill value** (optional): what this should be filled by if absent
- **current vocabulary** (optional): current set of possible values for this key,  with explanations as required.

Schema enforcement & population
-------------------------------

All these schema are enforced via mongodb's built-in schema validation; those schema validation rules are defined in the ``pointSchema.py`` script at https://github.com/argovis/db-schema.

Once an empty ``point`` collection is generated by the script above, it is populated by pipelines that translate from the formats of upstream data providers, to mongodb-appropriate JSON that matches these schemas. Each schema extension section below contains links to the code backing these pipelines.


Base point data schema
----------------------

This section describes the base point data schema from which all other point data in Argovis *must* inherit.

Required keys
+++++++++++++

All point data MUST include the following keys:

- ``_id``

  - **type:** string
  - **description:** a globally unique identifier for this record.

- ``basin``

  - **type:** int
  - **description:** integer index of basin. Can be provided by Argovis based on lat/lon in ``geolocation``.
  - **fill value:** -1,  used if reported lon/lat are on land.

- ``data_type``

  - **type:** string
  - **description:** token indicating the general class of data
  - **current vocabulary:** ``oceanicProfile``,  ``tropicalCyclone``

- ``date_updated_argovis``

  - **type:** ISO 8601 UTC datestring,  example ``1999-12-31T23:59:59Z``
  - **description:** time the record was added to Argovis

- ``geolocation``

  - **type:** geojson Point object
  - **description:** geojson Point tagging the lon/lat of this record.
  - **fill value:** ``{"type": "Point",  "coordinates": [0,  -90]}``

- ``source_info.source``

  - **type:** array of strings
  - **description:** data origin,  typically used to label major project subdivisions
  - **current vocabulary:** defined per project,  see schema extensions below.

- ``timestamp``

  - **type:** ISO 8601 UTC datestring,  example ``1999-12-31T23:59:59Z``
  - **description:** time the record measurement was made at.

Optional Keys
+++++++++++++

All point data MAY include the following keys; if meaningful data is available for any of these keys,  it should be represented in the format described.

- ``country``

  - **type:** string
  - **description:** ISO 3166-1 country code.

- ``data``

  - **type:** array of non-nested JSON documents
  - **description:** array indexes depth / altitude; individual documents are key/value pairs describing measurements made. Pressure or altitude must be present as one of the document keys. Example: ``{pres: 4.7,  psal: 33.987,  temp: 1.107, temp_argoqc: 1}``
  - **current vocabulary:** defined per project,  see schema extensions below.

- ``data_center``

  - **type:** string
  - **description:** entity responsible for processing this record,  once received.
  - **current vocabulary:** defined per project,  see schema extensions below.

- ``data_keys`` **mandatory if** ``data`` **is present**

  - **type:** array of strings
  - **description:** a complete list of all the keys found in any document in the ``data`` object.

- ``data_warning``

  - **type:** array of strings
  - **description:** short string tokens indicating possible problems with this record.
  - **current vocabulary:**
  
    - ``degenerate_levels``: data is reported twice for a given pressure / altitude level in a way that cannot be readily resolved
    - ``missing_basin``: unable to determine meaningful basin code, despite having a meaningful lat / lon (edge case in basins lookup grid)
    - ``missing_location``: one or both of longitude and latitude are missing
    - ``missing_timestamp``: no date or time of measurement associated with this profile.

- ``doi``

  - **type:** string
  - **description:** DOI for this record.

- ``instrument``

  - **type:** string
  - **description:** string token describing the device used to make this measurement,  like ``profiling_float``,  ``ship_ctd`` etc.
  - **current vocabulary:** TBD

- ``pi_name``

  - **type:** array of strings
  - **description:** name(s) of principle investigator(s)

- ``platform_id``

  - **type:** string
  - **description:** unique identifier for the platform or device responsible for making the measurements included in this record.

- ``platform_type``

  - **type:** string
  - **description:** make or model of the platform.
  - **current vocabulary:** TBD

- ``source_info.data_keys_source``

  - **type:** array of strings
  - **description:** list of measurement parameters as found in the source file

- ``source_info.date_updated_source``

  - **type:** ISO 8601 UTC datestring,  example ``1999-12-31T23:59:59Z``
  - **description:** date and time the upstream source file for this record was last modified

- ``source_info.source_url``

  - **type:** string
  - **description:** URL to download the original file from which the Argovis record was derived.

Argo profile schema extension
-----------------------------

All Argo data in Argovis is described as the union of the base point data schema and the following.

Population pipeline
+++++++++++++++++++

The ``point`` collection is populated with Argo data via the pipeline descibed at https://github.com/argovis/ifremer-sync.

.. _argo_vocab:

Base point schema vocabularies
++++++++++++++++++++++++++++++

The following keys from the base point schema have these vocabularies for Argovis:

- ``data`` keys: 

  - "bbp470"
  - "bbp532"
  - "bbp700"
  - "bbp700_2"
  - "bisulfide"
  - "cdom"
  - "chla"
  - "cndx"
  - "cp660"
  - "down_irradiance380"
  - "down_irradiance412"
  - "down_irradiance442"
  - "down_irradiance443"
  - "down_irradiance490"
  - "down_irradiance555"
  - "down_irradiance670"
  - "downwelling_par"
  - "doxy"
  - "doxy2"
  - "molar_doxy"
  - "nitrate"
  - "ph_in_situ_total"
  - "pres"
  - "psal"
  - "psal_sfile"
  - "temp"
  - "temp_sfile"
  - "turbidity"
  - "up_radiance412"
  - "up_radiance443"
  - "up_radiance490"
  - "up_radiance555"
  - and all the same again with "_argoqc" appended for the corresponding QC measurements.

- ``data_center``: TBD
- ``source_info.source``: ``argo_core``,  ``argo_bgc`` and ``argo_deep``

Required keys
+++++++++++++

- ``cycle_number``

  - **type:** int
  - **description:** probe cycle index

Optional keys
+++++++++++++

- ``data_keys_mode``

  - **type:** non-nested JSON document
  - **description:** JSON document with keys matching the entries of ``data_keys``,  and values indicating the variable's data mode
  - **current vocabulary:** ``R`` ealtime,  realtime ``A`` djusted,  or ``D`` elayed mode.

- ``fleetmonitoring``

  - **type:** string
  - **description:** URL for this float at https://fleetmonitoring.euro-argo.eu/float/

- ``geolocation_argoqc``

  - **type:** int
  - **description:** Argo's position QC flag
  - **fill value:** -1

- ``oceanops``

  - **type:** string
  - **description:** URL for this float at https://www.ocean-ops.org/board/wa/Platform

- ``positioning_system``

  - **type:** string
  - **description:** positioning system for this float.
  - vocabulary: see Argo ref table 9

- ``profile_direction``

  - **type:** string
  - **description:** whether the profile was gathered as the float ascended or descended
  - **current vocabulary:** ``A`` scending or ``D`` escending.

- ``timestamp_argoqc``

  - **type:** int
  - **description:** Argo's date QC flag
  - **fill value:** -1

- ``vertical_sampling_scheme``

  - **type:** string
  - **description:** sampling scheme for this profile.
  - **current vocabulary:** see Argo ref table 16

- ``wmo_inst_type``

  - tpye: string
  - **description:** instrument type as indexed by Argo.
  - **current vocabulary:** see Argo ref table 8

GO-SHIP profile schema extension
--------------------------------

All GO-SHIP data in Argovis is described as the union of the base point data schema and the following.

Population pipeline
+++++++++++++++++++

The ``point`` collection is populated with GO-SHIP data via the pipeline descibed at TBD

Base point schema vocabularies
++++++++++++++++++++++++++++++

The following keys from the base point schema have the following vocabularies for Argovis:

- ``data`` keys:

  - "ammonium",
  - "ammonium_woceqc",
  - "bottle_latitude",
  - "bottle_longitude",
  - "bottle_number",
  - "bottle_number_woceqc",
  - "bottle_time",
  - "carbon_tetrachloride",
  - "carbon_tetrachloride_woceqc",
  - "cfc_11",
  - "cfc_113",
  - "cfc_113_woceqc",
  - "cfc_11_woceqc",
  - "cfc_12",
  - "cfc_12_woceqc",
  - "chlorophyll_a",
  - "chlorophyll_a_ug_kg",
  - "chlorophyll_a_ug_kg_woceqc",
  - "chlorophyll_a_woceqc",
  - "ctd_beamcp",
  - "ctd_beamcp_woceqc",
  - "ctd_fluor",
  - "ctd_fluor_arbitrary",
  - "ctd_fluor_raw",
  - "ctd_fluor_raw_woceqc",
  - "ctd_fluor_woceqc",
  - "ctd_number_of_observations",
  - "ctd_pressure_raw",
  - "ctd_temperature_unk",
  - "ctd_temperature_unk_woceqc",
  - "ctd_transmissometer",
  - "ctd_transmissometer_raw",
  - "ctd_transmissometer_raw_woceqc",
  - "ctd_transmissometer_woceqc",
  - "del_carbon_13_dic",
  - "del_carbon_13_dic_woceqc",
  - "del_carbon_14_dic",
  - "del_carbon_14_dic_error",
  - "del_carbon_14_dic_woceqc",
  - "del_oxygen_18",
  - "del_oxygen_18_error",
  - "del_oxygen_18_woceqc",
  - "delta_helium_3",
  - "delta_helium_3_error",
  - "delta_helium_3_woceqc",
  - "dissolved_organic_carbon",
  - "dissolved_organic_carbon_woceqc",
  - "dissolved_organic_nitrogen",
  - "dissolved_organic_nitrogen_woceqc",
  - "doxy",
  - "doxy_woceqc",
  - "fco2",
  - "fco2_temperature",
  - "fco2_woceqc",
  - "helium",
  - "helium_error",
  - "helium_woceqc",
  - "hplc_placeholder",
  - "hplc_placeholder_woceqc",
  - "methyl_chloroform",
  - "methyl_chloroform_woceqc",
  - "neon",
  - "neon_error",
  - "neon_woceqc",
  - "nitrate",
  - "nitrate_woceqc",
  - "nitrite",
  - "nitrite_nitrate",
  - "nitrite_nitrate_woceqc",
  - "nitrite_woceqc",
  - "nitrous_oxide",
  - "nitrous_oxide_woceqc",
  - "oxygen",
  - "oxygen_ml_l",
  - "oxygen_ml_l_woceqc",
  - "oxygen_woceqc",
  - "par",
  - "par_woceqc",
  - "partial_co2_temperature",
  - "partial_pressure_of_co2",
  - "partial_pressure_of_co2_woceqc",
  - "particulate_organic_carbon",
  - "particulate_organic_carbon_woceqc",
  - "particulate_organic_nitrogen",
  - "particulate_organic_nitrogen_woceqc",
  - "ph_sws",
  - "ph_sws_woceqc",
  - "ph_temperature",
  - "ph_total_h_scale",
  - "ph_total_h_scale_woceqc",
  - "phaeophytin",
  - "phaeophytin_ug_l",
  - "phaeophytin_ug_l_woceqc",
  - "phaeophytin_woceqc",
  - "phosphate",
  - "phosphate_woceqc",
  - "potential_temperature",
  - "potential_temperature_68",
  - "potential_temperature_c",
  - "pres",
  - "psal",
  - "psal_woceqc",
  - "radium_226",
  - "radium_226_woceqc",
  - "radium_228",
  - "radium_228_woceqc",
  - "ref_temperature",
  - "ref_temperature_c",
  - "ref_temperature_c_woceqc",
  - "ref_temperature_woceqc",
  - "rev_pressure",
  - "rev_pressure_woceqc",
  - "rev_temperature",
  - "rev_temperature_90",
  - "rev_temperature_90_woceqc",
  - "rev_temperature_c",
  - "rev_temperature_c_woceqc",
  - "rev_temperature_woceqc",
  - "salinity",
  - "salinity_woceqc",
  - "sample",
  - "silicate",
  - "silicate_woceqc",
  - "sulfur_hexifluoride",
  - "sulfur_hexifluoride_woceqc",
  - "temp",
  - "temp_woceqc",
  - "total_alkalinity",
  - "total_alkalinity_woceqc",
  - "total_carbon",
  - "total_carbon_woceqc",
  - "total_dissolved_nitrogen",
  - "total_dissolved_nitrogen_woceqc",
  - "tritium",
  - "tritium_error",
  - "tritium_woceqc"

- ``data_center``: TBD
- ``source_info.source``: TBD

Required keys
+++++++++++++

- ``expocode``

  - **type:** string
  - **description:** 

Optional keys
+++++++++++++

- ``cast``

  - **type:** int
  - **description:**

- ``cchdo_cruise_id``

  - **type:** int
  - **description:**

- ``station``

  - **type:** string
  - **description:**

- ``woce_lines``

  - **type:** array of strings
  - **description:**


